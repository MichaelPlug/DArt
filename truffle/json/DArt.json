{
  "contractName": "DArt",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hashedName",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "property",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "possession",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "exposedAt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "status",
              "type": "bytes32"
            }
          ],
          "indexed": true,
          "internalType": "struct DArt.Artwork",
          "name": "artwork",
          "type": "tuple"
        }
      ],
      "name": "ProtectionActivityStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "dcoin",
      "outputs": [
        {
          "internalType": "contract DCoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "patron",
      "outputs": [
        {
          "internalType": "contract Patron",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "registerdActivities",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum DArt.ProtectionActivities",
          "name": "typology",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "extraInfo",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "registerdExibitions",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hashedName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isOn",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "registeredArtworks",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hashedName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "property",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "possession",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "exposedAt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "status",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "verification",
      "outputs": [
        {
          "internalType": "contract Verification",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newprice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashedName",
          "type": "bytes32"
        }
      ],
      "name": "mintArtworkNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashedName",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "mintExibitionNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "artworkID",
          "type": "bytes32"
        },
        {
          "internalType": "enum DArt.ProtectionActivities",
          "name": "oftype",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "extrainfo",
          "type": "bytes32"
        }
      ],
      "name": "createActivity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "artwork",
          "type": "bytes32"
        }
      ],
      "name": "allowAccessToArtwork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "artwork",
          "type": "bytes32"
        }
      ],
      "name": "revokeAccessToArtwork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "artwork",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "donateWorkOfArt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "artwork",
          "type": "bytes32"
        }
      ],
      "name": "getProperty",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hashedName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"property\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"possession\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"exposedAt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"}],\"indexed\":true,\"internalType\":\"struct DArt.Artwork\",\"name\":\"artwork\",\"type\":\"tuple\"}],\"name\":\"ProtectionActivityStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"artwork\",\"type\":\"bytes32\"}],\"name\":\"allowAccessToArtwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"artworkID\",\"type\":\"bytes32\"},{\"internalType\":\"enum DArt.ProtectionActivities\",\"name\":\"oftype\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"extrainfo\",\"type\":\"bytes32\"}],\"name\":\"createActivity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dcoin\",\"outputs\":[{\"internalType\":\"contract DCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"artwork\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"donateWorkOfArt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"artwork\",\"type\":\"bytes32\"}],\"name\":\"getProperty\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashedName\",\"type\":\"bytes32\"}],\"name\":\"mintArtworkNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashedName\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"mintExibitionNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"patron\",\"outputs\":[{\"internalType\":\"contract Patron\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"registerdActivities\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum DArt.ProtectionActivities\",\"name\":\"typology\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"extraInfo\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"registerdExibitions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashedName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"registeredArtworks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashedName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"property\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"possession\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"exposedAt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"artwork\",\"type\":\"bytes32\"}],\"name\":\"revokeAccessToArtwork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verification\",\"outputs\":[{\"internalType\":\"contract Verification\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mintArtworkNFT(bytes32)\":{\"params\":{\"hashedName\":\"name of the artwork hashed using keccak256\"}},\"mintExibitionNFT(bytes32,bool)\":{\"params\":{\"hashedName\":\"the Exibition's name hashed using keccak256\",\"status\":\"indicates the status of the creare exibition, if it's on or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mintArtworkNFT(bytes32)\":{\"notice\":\"mint an Artwork NFT. The id of the NFT is the hash of its name and the minter address.\"},\"mintExibitionNFT(bytes32,bool)\":{\"notice\":\"mint an Exibition NFT. The id of the NFT is the hash of its name and the minter address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DArt.sol\":\"DArt\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DArt.sol\":{\"keccak256\":\"0x9af48b83c61c174ae535558e8b45fa1eb8348fd1debc0ba904f6db0dda92de6b\",\"urls\":[\"bzz-raw://9d143e16f35f5280ddae074a0c58c5366d42833f9b3c44031d147157fd02fcb1\",\"dweb:/ipfs/Qmeu9288sTG1VHz8t5tdvfbfrTQLkNsJgCWSUcfgXFvv9P\"]},\"project:/contracts/DCoin.sol\":{\"keccak256\":\"0x1108d032e6e0b392295caca15bd93fd60862d2b94ad5f144eb547c82f5d34efd\",\"urls\":[\"bzz-raw://92ede5144fc95ddd7c15bb0bfe47b3c0a8f0a33ac2649a4f22093da8c103b916\",\"dweb:/ipfs/QmPxAGJTdncKRKk4yhVu6EumqSNkZi4KRPh29WEKa9Zwpv\"]},\"project:/contracts/Patron.sol\":{\"keccak256\":\"0xefef4a0986fd521dada453c23ecbf8fc1886d7bd8697d697da215365298f3aa9\",\"urls\":[\"bzz-raw://7efdb2e13fe7049a7b005a51d3c37b4bfa261f68a0e70387a511284c90adcf39\",\"dweb:/ipfs/QmS917HrSGpHi1WbsuaC6ZVzbBfFoby9xoNNaznMV6tp6z\"]},\"project:/contracts/Verification.sol\":{\"keccak256\":\"0xcbcbec684729be8cb5cddf40610627440fdcd139d69e3da2068e7b6ac0a295f7\",\"urls\":[\"bzz-raw://d2b3f68966a8b4156af6633b12559f23707b590166d722a75fd92e1ff05c78b4\",\"dweb:/ipfs/QmWFHwqwGWf9wbdxE77NXiSHusAjrWV1UnKj5HE1mNJPWT\"]}},\"version\":1}",
  "bytecode": "0x6080604052600160045560405161001590610194565b604051809103906000f080158015610031573d6000803e3d6000fd5b50600580546001600160a01b0319166001600160a01b03929092169190911790556040513090610060906101a1565b6001600160a01b039091168152602001604051809103906000f08015801561008c573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b039290921691821790556040513091906100bb906101ae565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156100ee573d6000803e3d6000fd5b50600780546001600160a01b0319166001600160a01b039290921691909117905534801561011b57600080fd5b50600080546001600160a01b03191633179055600654600754604051631217410960e01b81526001600160a01b039182166004820152911690631217410990602401600060405180830381600087803b15801561017757600080fd5b505af115801561018b573d6000803e3d6000fd5b505050506101bb565b6106c480610e4783390190565b61094b8061150b83390190565b61062980611e5683390190565b610c7d806101ca6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637278b2f211610097578063f4edcb4a11610066578063f4edcb4a14610292578063f9b82118146102a5578063fc13ae29146102b8578063ff9ebc51146102cb57600080fd5b80637278b2f21461020557806373150fa31461021857806391b7f5ed1461026c578063d0565e3e1461027f57600080fd5b80634c2d127d116100d35780634c2d127d146101695780634ffe2a8b1461017e57806362df36e91461019157806370ef131e146101f257600080fd5b806302d05d3f146100fa5780630ba32b271461012a578063463f7a891461013d575b600080fd5b60005461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60075461010d906001600160a01b031681565b61010d61014b366004610abf565b6000908152600160205260409020600201546001600160a01b031690565b61017c610177366004610ad8565b61035a565b005b60055461010d906001600160a01b031681565b6101cd61019f366004610abf565b600260205260009081526040902080546001909101546001600160a01b03811690600160a01b900460ff1683565b604080519384526001600160a01b039092166020840152151590820152606001610121565b60065461010d906001600160a01b031681565b61017c610213366004610b30565b610629565b61025c610226366004610abf565b600360208190526000918252604090912080546001820154600283015492909301546001600160a01b03909116929160ff169084565b6040516101219493929190610b72565b61017c61027a366004610abf565b6106b4565b61017c61028d366004610abf565b6106d3565b61017c6102a0366004610bb9565b610878565b61017c6102b3366004610abf565b61099d565b61017c6102c6366004610bee565b6109d0565b61031d6102d9366004610abf565b60016020819052600091825260409091208054918101546002820154600383015460048401546005909401546001600160a01b039384169492841693909116919086565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a082015260c001610121565b600554604051634427673360e01b81523360048201526000916001600160a01b031690634427673390602401602060405180830381865afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190610c18565b9050806004146103d9576103d9610c31565b6000848152600160205260409020600301546001600160a01b031633146104885760405162461bcd60e51b815260206004820152605260248201527f596f7520646f206e6f74206861766520746865206e656365737361727920706560448201527f726d697373696f6e7320746f2063726561746520616e2041637469766974792060648201527161626f7574207468697320617274776f726b60701b608482015260a4015b60405180910390fd5b6040516bffffffffffffffffffffffff193360601b16602082015242603482015260009060540160408051601f19818403018152828252805160209182012060008981526001835283902060059081018290556080850184523385524292850192909252935090820190869081111561050357610503610b5c565b81526020908101859052600083815260038252604090819020835181546001600160a01b0319166001600160a01b0390911617815591830151600180840191909155908301516002830180549192909160ff19169083600581111561056a5761056a610b5c565b021790555060608201518160030155905050610584610a04565b600584600581111561059857610598610b5c565b141580156105b8575060048460058111156105b5576105b5610b5c565b14155b15610622576007546040516354250b1d60e11b8152336004820152602481018790526001600160a01b039091169063a84a163a90604401600060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b505050505b5050505050565b6000828152600160205260409020600201546001600160a01b031633146106a95760405162461bcd60e51b815260206004820152602e60248201527f596f7520617265206e6f7420746865206f776e6572206f66207468652073656c60448201526d6563746564206172746f776f726b60901b606482015260840161047f565b506000526001602052565b6000546001600160a01b031633146106ce576106ce610c31565b600455565b600554604051634427673360e01b81523360048201526000916001600160a01b031690634427673390602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610c18565b90506004811061075257610752610c31565b600061075d83610a72565b600081815260016020819052604090912001549091506001600160a01b0316156107d55760405162461bcd60e51b815260206004820152602360248201527f4120636f6c6c6973696f6e20647572696e672068617368696e67206f636375726044820152621c995960ea1b606482015260840161047f565b6107dd610a04565b6040805160c0810182529384523360208086018281528684019283526000606088018181526080890182815260a08a018381529783526001948590529590912097518855905191870180546001600160a01b03199081166001600160a01b0394851617909155925160028801805485169184169190911790555160038701805490931691161790555160048401555160059092019190915550565b600554604051634427673360e01b81523360048201526000916001600160a01b031690634427673390602401602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190610c18565b9050600281106108f7576108f7610c31565b600061090284610a72565b600081815260016020819052604090912001549091506001600160a01b03161561092e5761092e610c31565b610936610a04565b6040805160608101825294855233602080870191825294151586830190815260009384526002909552912093518455516001909301805492511515600160a01b026001600160a81b03199093166001600160a01b0394909416939093179190911790915550565b6000818152600160205260409020600201546001600160a01b031633146109c6576109c6610c31565b6000526001602052565b6000818152600160205260409020600201546001600160a01b031633146109f9576109f9610c31565b600052506001602052565b60065460048054604051638cd6a2ad60e01b815291820152336024820152600060448201526001600160a01b0390911690638cd6a2ad90606401600060405180830381600087803b158015610a5857600080fd5b505af1158015610a6c573d6000803e3d6000fd5b50505050565b60008133604051602001610aa292919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052805190602001209050919050565b600060208284031215610ad157600080fd5b5035919050565b600080600060608486031215610aed57600080fd5b83359250602084013560068110610b0357600080fd5b929592945050506040919091013590565b80356001600160a01b0381168114610b2b57600080fd5b919050565b60008060408385031215610b4357600080fd5b82359150610b5360208401610b14565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0385168152602081018490526080810160068410610ba757634e487b7160e01b600052602160045260246000fd5b60408201939093526060015292915050565b60008060408385031215610bcc57600080fd5b8235915060208301358015158114610be357600080fd5b809150509250929050565b60008060408385031215610c0157600080fd5b610c0a83610b14565b946020939093013593505050565b600060208284031215610c2a57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fdfea26469706673582212209094ffe36101141da332fe7a298ca05fbe458514be3ecd41e0b4107d33cb73bf64736f6c634300080a0033608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610692806100326000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063923f0b9311610066578063923f0b931461013d578063a2d7ed7614610152578063b479d3a914610165578063b9209e33146101a7578063c9c76a7d146101d757600080fd5b806302d05d3f146100a357806344276733146100d35780635f1ef4e3146100f4578063766954b414610117578063826c81691461012a575b600080fd5b6000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e136600461049a565b6101ea565b6040519081526020016100ca565b6101076101023660046104bc565b610253565b60405190151581526020016100ca565b6100e6610125366004610531565b610298565b6100e6610138366004610573565b6102cb565b61015061014b3660046105c7565b610336565b005b6100e661016036600461049a565b6103e0565b61019861017336600461049a565b6001602081905260009182526040909120805491015460ff8082169161010090041683565b6040516100ca93929190610611565b6101076101b536600461049a565b6001600160a01b03166000908152600160208190526040909120015460ff1690565b6101506101e536600461049a565b610424565b6001600160a01b03811660009081526001602081905260408220015460ff1661021257600080fd5b6001600160a01b03821660009081526001602081905260409091200154610100900460ff166004811115610248576102486105fb565b92915050565b919050565b6001600160a01b03811660009081526001602081905260408220015460ff1661027b57600080fd5b506001600160a01b03166000908152600160205260409020541490565b600082826040516020016102ad92919061064c565b60405160208183030381529060405280519060200120905092915050565b600083836040516020016102e092919061064c565b60408051601f198184030181528282528051602091820120908301526bffffffffffffffffffffffff19606085901b16908201526054016040516020818303038152906040528051906020012090509392505050565b336000908152600160208190526040909120015460ff166103dc57604080516060810182528381526000602082015290810182600481111561037a5761037a6105fb565b9052336000908152600160208181526040928390208451815590840151918101805492151560ff198416811782559385015191939192909161ff00191661ffff19909116176101008360048111156103d4576103d46105fb565b021790555050505b5050565b6001600160a01b03811660009081526001602081905260408220015460ff1661040857600080fd5b506001600160a01b031660009081526001602052604090205490565b6000546001600160a01b03163314801561045557506001600160a01b03811660009081526001602052604090205415155b1561009e576001600160a01b031660009081526001602081905260409091208101805460ff19169091179055565b80356001600160a01b038116811461024e57600080fd5b6000602082840312156104ac57600080fd5b6104b582610483565b9392505050565b600080604083850312156104cf57600080fd5b823591506104df60208401610483565b90509250929050565b60008083601f8401126104fa57600080fd5b50813567ffffffffffffffff81111561051257600080fd5b60208301915083602082850101111561052a57600080fd5b9250929050565b6000806020838503121561054457600080fd5b823567ffffffffffffffff81111561055b57600080fd5b610567858286016104e8565b90969095509350505050565b60008060006040848603121561058857600080fd5b833567ffffffffffffffff81111561059f57600080fd5b6105ab868287016104e8565b90945092506105be905060208501610483565b90509250925092565b600080604083850312156105da57600080fd5b823591506020830135600581106105f057600080fd5b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b8381528215156020820152606081016005831061063e57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b818382376000910190815291905056fea2646970667358221220875d2a1985bfffa912f52647b370f0c13869e0de7696ce5297813b234d8095f664736f6c634300080a00336080604052600060025534801561001557600080fd5b5060405161094b38038061094b83398101604081905261003491610067565b60008054336001600160a01b031991821617909155600480549091166001600160a01b0392909216919091179055610097565b60006020828403121561007957600080fd5b81516001600160a01b038116811461009057600080fd5b9392505050565b6108a5806100a66000396000f3fe6080604052600436106100dd5760003560e01c8063603e5f251161007f5780638d859f3e116100595780638d859f3e14610222578063b7760c8f1461023d578063e086e5ec1461025d578063e3d670d71461027257600080fd5b8063603e5f25146101be57806373f42561146101de5780638cd6a2ad1461020257600080fd5b806312174109116100bb57806312174109146101565780631249c58b146101765780632e1a7d4d1461017e5780634b60690d1461019e57600080fd5b806307546172146100e25780630c08bf881461011f5780630f177a6f14610136575b600080fd5b3480156100ee57600080fd5b50600054610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012b57600080fd5b5061013461029f565b005b34801561014257600080fd5b506101346101513660046106d1565b610317565b34801561016257600080fd5b506101346101713660046106fb565b61035f565b61013461039b565b34801561018a57600080fd5b5061013461019936600461071d565b610429565b3480156101aa57600080fd5b50600454610102906001600160a01b031681565b3480156101ca57600080fd5b50600354610102906001600160a01b031681565b3480156101ea57600080fd5b506101f460025481565b604051908152602001610116565b34801561020e57600080fd5b5061013461021d366004610736565b6104be565b34801561022e57600080fd5b506101f466071afd498d000081565b34801561024957600080fd5b5061013461025836600461077b565b610575565b34801561026957600080fd5b506101346105f0565b34801561027e57600080fd5b506101f461028d3660046106fb565b60016020526000908152604090205481565b6000546001600160a01b031633146103095760405162461bcd60e51b815260206004820152602260248201527f596f752063616e6e6f74207465726d696e6174652074686520636f6e74726163604482015261742160f01b60648201526084015b60405180910390fd5b6000546001600160a01b0316ff5b6003546001600160a01b0316331461032e57600080fd5b6001600160a01b038216600090815260016020526040812080548392906103569084906107bd565b90915550505050565b6000546001600160a01b03163314610379576103796107d5565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b66071afd498d00003410156103f25760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f7567682076616c756520666f72206120746f6b656e210000006044820152606401610300565b61040366071afd498d0000346107eb565b33600090815260016020526040812080549091906104229084906107bd565b9091555050565b336000908152600160205260409020548111156104585760405162461bcd60e51b81526004016103009061080d565b3360009081526001602052604081208054839290610477908490610839565b909155503390506108fc61049266071afd498d000084610850565b6040518115909202916000818181858888f193505050501580156104ba573d6000803e3d6000fd5b5050565b6003546001600160a01b03163314806104e157506004546001600160a01b031633145b6104ed576104ed6107d5565b6001600160a01b0382166000908152600160205260409020548311156105255760405162461bcd60e51b81526004016103009061080d565b6001600160a01b0382166000908152600160205260408120805485929061054d908490610839565b9091555081905061057057826002600082825461056a91906107bd565b90915550505b505050565b336000908152600160205260409020548211156105a45760405162461bcd60e51b81526004016103009061080d565b33600090815260016020526040812080548492906105c3908490610839565b90915550506001600160a01b038116600090815260016020526040812080548492906103569084906107bd565b6000546001600160a01b0316331461065d5760405162461bcd60e51b815260206004820152602a60248201527f596f75277265206e6f7420746865206d696e746572206f662074686520736d616044820152691c9d18dbdb9d1c9858dd60b21b6064820152608401610300565b6000546002546001600160a01b03909116906108fc906106859066071afd498d000090610850565b6040518115909202916000818181858888f193505050501580156106ad573d6000803e3d6000fd5b506000600255565b80356001600160a01b03811681146106cc57600080fd5b919050565b600080604083850312156106e457600080fd5b6106ed836106b5565b946020939093013593505050565b60006020828403121561070d57600080fd5b610716826106b5565b9392505050565b60006020828403121561072f57600080fd5b5035919050565b60008060006060848603121561074b57600080fd5b8335925061075b602085016106b5565b91506040840135801515811461077057600080fd5b809150509250925092565b6000806040838503121561078e57600080fd5b8235915061079e602084016106b5565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600082198211156107d0576107d06107a7565b500190565b634e487b7160e01b600052600160045260246000fd5b60008261080857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252601290820152714e6f7420656e6f7567682044436f696e732160701b604082015260600190565b60008282101561084b5761084b6107a7565b500390565b600081600019048311821515161561086a5761086a6107a7565b50029056fea264697066735822122071de76d53668d90fc3e4c4302211c03c60296aadc5e5e67c69c5753885cc1df564736f6c634300080a0033608060405234801561001057600080fd5b5060405161062938038061062983398101604081905261002f91610088565b600480546001600160a01b039384166001600160a01b03199182161790915560038054929093169181169190911790915560028054909116331790556100c2565b6001600160a01b038116811461008557600080fd5b50565b6000806040838503121561009b57600080fd5b82516100a681610070565b60208401519092506100b781610070565b809150509250929050565b610558806100d16000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a3ed221d11610066578063a3ed221d14610174578063a84a163a14610194578063a915b5e2146101a9578063b37c16d2146101c9578063ce3d3d48146101dc57600080fd5b806307546172146100985780633cdc4b58146100c85780634b60690d146101415780636a29a62014610154575b600080fd5b6002546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101336100d6366004610422565b6040516bffffffffffffffffffffffff19606084811b8216602084015283901b1660348201526000908190819060480160405160208183030381529060405280519060200120815260200190815260200160002054905092915050565b6040519081526020016100bf565b6004546100ab906001600160a01b031681565b61013361016236600461045b565b60016020526000908152604090205481565b61013361018236600461045b565b60009081526001602052604090205490565b6101a76101a2366004610474565b6101ef565b005b6101336101b736600461045b565b60006020819052908152604090205481565b6101a76101d73660046104a0565b610299565b6003546100ab906001600160a01b031681565b6004546001600160a01b03163314610209576102096104c2565b600081815260016020526040902054801561029457600354604051630f177a6f60e01b81526001600160a01b0385811660048301526024820184905290911690630f177a6f90604401600060405180830381600087803b15801561026c57600080fd5b505af1158015610280573d6000803e3d6000fd5b505050600083815260016020526040812055505b505050565b600354604051638cd6a2ad60e01b815260048101839052336024820152600160448201526001600160a01b0390911690638cd6a2ad90606401600060405180830381600087803b1580156102ec57600080fd5b505af1158015610300573d6000803e3d6000fd5b505050600083815260016020526040812080548493509091906103249084906104d8565b90915550506004805460405163463f7a8960e01b81529182018490526000916001600160a01b039091169063463f7a8990602401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906104fe565b6040516bffffffffffffffffffffffff1933606090811b8216602084015283901b16603482015290915082906000908190604801604051602081830303815290604052805190602001208152602001908152602001600020600082825461040091906104d8565b9091555050505050565b6001600160a01b038116811461041f57600080fd5b50565b6000806040838503121561043557600080fd5b82356104408161040a565b915060208301356104508161040a565b809150509250929050565b60006020828403121561046d57600080fd5b5035919050565b6000806040838503121561048757600080fd5b82356104928161040a565b946020939093013593505050565b600080604083850312156104b357600080fd5b50508035926020909101359150565b634e487b7160e01b600052600160045260246000fd5b600082198211156104f957634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561051057600080fd5b815161051b8161040a565b939250505056fea2646970667358221220689e6541a2b704a95f5e1963f95a04e0704fd4a653500d82f4b98e3daa9112f164736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80637278b2f211610097578063f4edcb4a11610066578063f4edcb4a14610292578063f9b82118146102a5578063fc13ae29146102b8578063ff9ebc51146102cb57600080fd5b80637278b2f21461020557806373150fa31461021857806391b7f5ed1461026c578063d0565e3e1461027f57600080fd5b80634c2d127d116100d35780634c2d127d146101695780634ffe2a8b1461017e57806362df36e91461019157806370ef131e146101f257600080fd5b806302d05d3f146100fa5780630ba32b271461012a578063463f7a891461013d575b600080fd5b60005461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60075461010d906001600160a01b031681565b61010d61014b366004610abf565b6000908152600160205260409020600201546001600160a01b031690565b61017c610177366004610ad8565b61035a565b005b60055461010d906001600160a01b031681565b6101cd61019f366004610abf565b600260205260009081526040902080546001909101546001600160a01b03811690600160a01b900460ff1683565b604080519384526001600160a01b039092166020840152151590820152606001610121565b60065461010d906001600160a01b031681565b61017c610213366004610b30565b610629565b61025c610226366004610abf565b600360208190526000918252604090912080546001820154600283015492909301546001600160a01b03909116929160ff169084565b6040516101219493929190610b72565b61017c61027a366004610abf565b6106b4565b61017c61028d366004610abf565b6106d3565b61017c6102a0366004610bb9565b610878565b61017c6102b3366004610abf565b61099d565b61017c6102c6366004610bee565b6109d0565b61031d6102d9366004610abf565b60016020819052600091825260409091208054918101546002820154600383015460048401546005909401546001600160a01b039384169492841693909116919086565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a082015260c001610121565b600554604051634427673360e01b81523360048201526000916001600160a01b031690634427673390602401602060405180830381865afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190610c18565b9050806004146103d9576103d9610c31565b6000848152600160205260409020600301546001600160a01b031633146104885760405162461bcd60e51b815260206004820152605260248201527f596f7520646f206e6f74206861766520746865206e656365737361727920706560448201527f726d697373696f6e7320746f2063726561746520616e2041637469766974792060648201527161626f7574207468697320617274776f726b60701b608482015260a4015b60405180910390fd5b6040516bffffffffffffffffffffffff193360601b16602082015242603482015260009060540160408051601f19818403018152828252805160209182012060008981526001835283902060059081018290556080850184523385524292850192909252935090820190869081111561050357610503610b5c565b81526020908101859052600083815260038252604090819020835181546001600160a01b0319166001600160a01b0390911617815591830151600180840191909155908301516002830180549192909160ff19169083600581111561056a5761056a610b5c565b021790555060608201518160030155905050610584610a04565b600584600581111561059857610598610b5c565b141580156105b8575060048460058111156105b5576105b5610b5c565b14155b15610622576007546040516354250b1d60e11b8152336004820152602481018790526001600160a01b039091169063a84a163a90604401600060405180830381600087803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b505050505b5050505050565b6000828152600160205260409020600201546001600160a01b031633146106a95760405162461bcd60e51b815260206004820152602e60248201527f596f7520617265206e6f7420746865206f776e6572206f66207468652073656c60448201526d6563746564206172746f776f726b60901b606482015260840161047f565b506000526001602052565b6000546001600160a01b031633146106ce576106ce610c31565b600455565b600554604051634427673360e01b81523360048201526000916001600160a01b031690634427673390602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610c18565b90506004811061075257610752610c31565b600061075d83610a72565b600081815260016020819052604090912001549091506001600160a01b0316156107d55760405162461bcd60e51b815260206004820152602360248201527f4120636f6c6c6973696f6e20647572696e672068617368696e67206f636375726044820152621c995960ea1b606482015260840161047f565b6107dd610a04565b6040805160c0810182529384523360208086018281528684019283526000606088018181526080890182815260a08a018381529783526001948590529590912097518855905191870180546001600160a01b03199081166001600160a01b0394851617909155925160028801805485169184169190911790555160038701805490931691161790555160048401555160059092019190915550565b600554604051634427673360e01b81523360048201526000916001600160a01b031690634427673390602401602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190610c18565b9050600281106108f7576108f7610c31565b600061090284610a72565b600081815260016020819052604090912001549091506001600160a01b03161561092e5761092e610c31565b610936610a04565b6040805160608101825294855233602080870191825294151586830190815260009384526002909552912093518455516001909301805492511515600160a01b026001600160a81b03199093166001600160a01b0394909416939093179190911790915550565b6000818152600160205260409020600201546001600160a01b031633146109c6576109c6610c31565b6000526001602052565b6000818152600160205260409020600201546001600160a01b031633146109f9576109f9610c31565b600052506001602052565b60065460048054604051638cd6a2ad60e01b815291820152336024820152600060448201526001600160a01b0390911690638cd6a2ad90606401600060405180830381600087803b158015610a5857600080fd5b505af1158015610a6c573d6000803e3d6000fd5b50505050565b60008133604051602001610aa292919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052805190602001209050919050565b600060208284031215610ad157600080fd5b5035919050565b600080600060608486031215610aed57600080fd5b83359250602084013560068110610b0357600080fd5b929592945050506040919091013590565b80356001600160a01b0381168114610b2b57600080fd5b919050565b60008060408385031215610b4357600080fd5b82359150610b5360208401610b14565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0385168152602081018490526080810160068410610ba757634e487b7160e01b600052602160045260246000fd5b60408201939093526060015292915050565b60008060408385031215610bcc57600080fd5b8235915060208301358015158114610be357600080fd5b809150509250929050565b60008060408385031215610c0157600080fd5b610c0a83610b14565b946020939093013593505050565b600060208284031215610c2a57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fdfea26469706673582212209094ffe36101141da332fe7a298ca05fbe458514be3ecd41e0b4107d33cb73bf64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:553:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:5",
                "type": ""
              }
            ],
            "src": "14:203:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "376:175:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "386:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "398:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "409:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "394:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "394:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "386:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "421:29:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "439:3:5",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "444:1:5",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "435:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "435:11:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "448:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "431:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:19:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "425:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "466:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "481:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "489:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "477:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "477:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "459:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "459:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "459:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "513:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "524:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "509:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "509:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "533:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "541:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "529:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "529:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "502:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "502:43:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DArt_$477_t_contract$_DCoin_$728__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "337:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "348:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "367:4:5",
                "type": ""
              }
            ],
            "src": "222:329:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_DArt_$477_t_contract$_DCoin_$728__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7284:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:5",
                "type": ""
              }
            ],
            "src": "14:203:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "337:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "347:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "359:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "370:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "355:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "347:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "389:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "404:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "420:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "425:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "416:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "416:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "429:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "412:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "412:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "400:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "382:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "382:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "382:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Patron_$947__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "306:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "317:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "328:4:5",
                "type": ""
              }
            ],
            "src": "222:217:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "514:110:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "560:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "569:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "572:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "562:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "562:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "562:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "535:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "544:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "531:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "531:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "556:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "527:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "524:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "585:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "608:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "595:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "595:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "585:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "491:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "503:6:5",
                "type": ""
              }
            ],
            "src": "444:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:288:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "811:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "814:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "804:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "766:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "827:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "850:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "837:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "827:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "869:45:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "899:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "910:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "882:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:32:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "873:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "947:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "956:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "959:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "949:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "949:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "949:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "936:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "943:1:5",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "933:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "933:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "926:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "926:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "923:40:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "972:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "982:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "972:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "996:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1023:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1034:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1019:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1019:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1006:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1006:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "996:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_enum$_ProtectionActivities_$50t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "706:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "717:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "729:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "737:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "745:6:5",
                "type": ""
              }
            ],
            "src": "629:415:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1171:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1181:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1193:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1189:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1181:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1223:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1238:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1254:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1259:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1250:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1250:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1263:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1246:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1246:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1234:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1234:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1216:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1216:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1216:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Verification_$1173__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1140:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1151:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1162:4:5",
                "type": ""
              }
            ],
            "src": "1049:224:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1429:204:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1439:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1451:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1462:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1447:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1447:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1439:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1481:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1492:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1474:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1474:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1474:25:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1519:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1530:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1515:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1515:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1539:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1555:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1560:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1551:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1551:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1564:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1547:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1547:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1508:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:60:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1508:60:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1588:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1599:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1584:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1584:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "1618:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1611:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1611:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1604:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1604:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1577:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:50:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1577:50:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_bool__to_t_bytes32_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1382:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1393:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1401:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1409:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1420:4:5",
                "type": ""
              }
            ],
            "src": "1278:355:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1752:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1762:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1774:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1785:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1770:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1770:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1762:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1804:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1819:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1835:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1840:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1831:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1831:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1844:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1827:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1827:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1815:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1815:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1797:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1797:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1797:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DCoin_$728__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1721:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1732:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1743:4:5",
                "type": ""
              }
            ],
            "src": "1638:216:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1908:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1918:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1940:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1927:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1927:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1918:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2010:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2019:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2022:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2012:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2012:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2012:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1969:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1980:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1995:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2000:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1991:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1991:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2004:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1987:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1987:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1976:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1976:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1966:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1966:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1959:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1959:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1956:70:5"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1887:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1898:5:5",
                "type": ""
              }
            ],
            "src": "1859:173:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2124:167:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2170:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2179:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2182:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2172:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2172:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2172:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2145:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2154:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2141:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2141:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2166:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2137:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2134:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2195:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2218:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2205:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2195:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2237:48:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2270:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2281:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2266:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2266:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2247:18:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:38:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2237:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2082:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2093:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2105:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2113:6:5",
                "type": ""
              }
            ],
            "src": "2037:254:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2328:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2352:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2357:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2348:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2348:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2338:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2338:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2388:4:5",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2378:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2378:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2378:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2409:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2412:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2402:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2402:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2402:15:5"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2296:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2634:385:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2644:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2656:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2667:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2652:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2652:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2644:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2687:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2702:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2718:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2723:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2714:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2714:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2727:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2710:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2710:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2698:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2698:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2680:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2680:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2680:51:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2751:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2762:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2747:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2747:18:5"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2767:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2740:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2740:34:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2816:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2837:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2844:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2849:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2840:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2840:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2830:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2830:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2830:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2881:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2884:4:5",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2874:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2874:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2874:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2909:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2912:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2902:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2902:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2902:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2796:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2804:1:5",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2793:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2793:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2786:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2786:21:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2783:144:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2947:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2958:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2943:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2943:18:5"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2963:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2936:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2936:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2936:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2990:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3001:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2986:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2986:18:5"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3006:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2979:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2979:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2979:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_enum$_ProtectionActivities_$50_t_bytes32__to_t_address_t_uint256_t_uint8_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2579:9:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2590:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2598:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2606:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2614:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2625:4:5",
                "type": ""
              }
            ],
            "src": "2428:591:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3094:110:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3140:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3149:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3152:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3142:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3142:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3142:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3115:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3124:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3111:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3111:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3136:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3107:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3107:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3104:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3165:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3188:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3175:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3175:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3165:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3060:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3071:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3083:6:5",
                "type": ""
              }
            ],
            "src": "3024:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3293:257:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3339:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3348:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3351:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3341:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3341:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3341:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3314:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3323:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3310:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3310:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3335:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3306:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3306:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3303:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3364:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3387:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3374:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3374:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3364:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3406:45:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3436:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3447:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3432:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3432:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3419:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3419:32:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3410:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3504:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3513:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3516:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3506:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3506:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3506:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3473:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3494:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3487:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3487:13:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3480:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3480:21:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3470:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3470:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3463:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3463:40:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3460:60:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3529:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3539:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3529:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3251:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3262:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3274:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3282:6:5",
                "type": ""
              }
            ],
            "src": "3209:341:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3642:167:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3688:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3697:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3700:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3690:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3690:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3690:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3663:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3672:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3659:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3659:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3684:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3655:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3655:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3652:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3713:39:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3742:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3723:18:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3723:29:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3713:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3761:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3788:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3799:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3784:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3784:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3771:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3761:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3600:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3611:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3623:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3631:6:5",
                "type": ""
              }
            ],
            "src": "3555:254:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4055:359:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4065:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4077:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4088:3:5",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4073:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4073:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4065:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4108:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4119:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4101:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4101:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4101:25:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4135:29:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4153:3:5",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:1:5",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4149:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4149:11:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4162:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4145:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4145:19:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4139:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4184:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4195:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4180:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4180:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4204:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4212:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4200:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4200:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4173:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4173:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4173:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4236:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4247:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4232:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4232:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4256:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4264:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4252:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4252:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4225:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4225:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4225:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4288:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4299:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4284:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4284:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4308:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4316:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4304:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4304:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4277:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4277:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4277:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4340:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4351:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4336:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4336:19:5"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "4357:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4329:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4329:35:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4329:35:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4384:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4395:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4380:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4380:19:5"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "4401:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4373:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4373:35:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4373:35:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_address_t_bytes32_t_bytes32__to_t_bytes32_t_address_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3984:9:5",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3995:6:5",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4003:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4011:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4019:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4027:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4035:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4046:4:5",
                "type": ""
              }
            ],
            "src": "3814:600:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4500:103:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4546:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4555:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4558:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4548:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4548:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4548:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4521:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4530:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4517:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4517:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4542:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4513:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4513:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4510:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4571:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4587:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4581:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4581:16:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4571:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4466:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4477:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4489:6:5",
                "type": ""
              }
            ],
            "src": "4419:184:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4640:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4657:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4664:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4669:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4660:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4660:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4650:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4650:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4650:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4697:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4700:4:5",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4690:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4690:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4690:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4721:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4724:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4714:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4714:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4714:15:5"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "4608:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4914:312:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4931:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4942:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4924:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4924:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4924:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4965:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4976:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4961:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4961:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4981:2:5",
                        "type": "",
                        "value": "82"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4954:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4954:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4954:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5004:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5015:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5000:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5000:18:5"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520746865206e6563657373617279207065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5020:34:5",
                        "type": "",
                        "value": "You do not have the necessary pe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4993:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4993:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4993:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5075:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5086:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5071:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5071:18:5"
                      },
                      {
                        "hexValue": "726d697373696f6e7320746f2063726561746520616e20416374697669747920",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5091:34:5",
                        "type": "",
                        "value": "rmissions to create an Activity "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5064:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5064:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5064:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5146:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5157:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5142:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5142:19:5"
                      },
                      {
                        "hexValue": "61626f7574207468697320617274776f726b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5163:20:5",
                        "type": "",
                        "value": "about this artwork"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5135:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5135:49:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5135:49:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5193:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5205:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5216:3:5",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5201:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5201:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5193:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a02b75414fea1b94034c410064023c4fa6555e502b763f01a982862550833165__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4891:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4905:4:5",
                "type": ""
              }
            ],
            "src": "4740:486:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5378:147:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5395:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5408:2:5",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5412:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5404:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5404:15:5"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5425:26:5",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "5421:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5421:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5400:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5400:53:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5388:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5388:66:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5388:66:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5474:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5479:2:5",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5470:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5470:12:5"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5484:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5463:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5463:28:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5463:28:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5500:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5511:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5516:2:5",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5507:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5507:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5500:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5346:3:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5351:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5359:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5370:3:5",
                "type": ""
              }
            ],
            "src": "5231:294:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5659:145:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5669:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5681:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5692:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5677:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5677:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5669:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5711:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5726:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5742:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5747:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5738:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5738:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5751:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5734:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5734:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5722:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5722:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5704:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5704:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5704:51:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5775:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5786:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5771:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5771:18:5"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5791:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5764:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5764:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5764:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5620:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5631:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5639:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5650:4:5",
                "type": ""
              }
            ],
            "src": "5530:274:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5983:236:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6000:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6011:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5993:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5993:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6034:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6045:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6030:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6030:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6050:2:5",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6023:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6023:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6023:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6073:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6084:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6069:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6069:18:5"
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572206f66207468652073656c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6089:34:5",
                        "type": "",
                        "value": "You are not the owner of the sel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6062:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6062:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6062:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6144:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6155:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6140:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6140:18:5"
                      },
                      {
                        "hexValue": "6563746564206172746f776f726b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6160:16:5",
                        "type": "",
                        "value": "ected artowork"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6133:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6133:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6133:44:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6186:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6198:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6209:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6194:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6194:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6186:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5200ab35d64ef8d80b7e74b3da287189608d8f762526f98684558bbf053dc8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5960:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5974:4:5",
                "type": ""
              }
            ],
            "src": "5809:410:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6398:225:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6415:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6426:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6408:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6408:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6408:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6449:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6460:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6445:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6445:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6465:2:5",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6438:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6438:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6438:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6488:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6499:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6484:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6484:18:5"
                      },
                      {
                        "hexValue": "4120636f6c6c6973696f6e20647572696e672068617368696e67206f63637572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6504:34:5",
                        "type": "",
                        "value": "A collision during hashing occur"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6477:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6477:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6477:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6559:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6570:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6555:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6555:18:5"
                      },
                      {
                        "hexValue": "726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6575:5:5",
                        "type": "",
                        "value": "red"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6548:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:33:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6590:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6602:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6613:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6598:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6598:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6590:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a96294bcbd0c6f0c2cec96a517816be9c6ee03d286d5f55aead7265fc58faf46__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6375:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6389:4:5",
                "type": ""
              }
            ],
            "src": "6224:399:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6779:204:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6789:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6801:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6812:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6797:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6797:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6789:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6831:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6842:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6824:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6824:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6824:25:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6869:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6880:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6865:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6865:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6889:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6905:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6910:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6901:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6901:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6914:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6897:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6897:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6885:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6885:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6858:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6858:60:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6858:60:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6938:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6949:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6934:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6934:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "6968:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6961:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6961:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6954:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6954:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6927:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6927:50:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6927:50:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_bool__to_t_uint256_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6732:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6743:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6751:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6759:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6770:4:5",
                "type": ""
              }
            ],
            "src": "6628:355:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7135:147:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7152:3:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7157:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7145:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7145:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7145:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7184:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7189:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7180:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7180:12:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7202:2:5",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "7206:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "7198:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7198:15:5"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7219:26:5",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "7215:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7215:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7194:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7194:53:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7173:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7173:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7173:75:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7257:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7268:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7273:2:5",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7264:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7264:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7257:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32_t_address__to_t_bytes32_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7103:3:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7108:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7116:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7127:3:5",
                "type": ""
              }
            ],
            "src": "6988:294:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_Patron_$947__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_enum$_ProtectionActivities_$50t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(lt(value, 6)) { revert(0, 0) }\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_Verification_$1173__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_bool__to_t_bytes32_t_address_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_contract$_DCoin_$728__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_enum$_ProtectionActivities_$50_t_bytes32__to_t_address_t_uint256_t_uint8_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        if iszero(lt(value2, 6))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_address_t_bytes32_t_bytes32__to_t_bytes32_t_address_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_a02b75414fea1b94034c410064023c4fa6555e502b763f01a982862550833165__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 82)\n        mstore(add(headStart, 64), \"You do not have the necessary pe\")\n        mstore(add(headStart, 96), \"rmissions to create an Activity \")\n        mstore(add(headStart, 128), \"about this artwork\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_5200ab35d64ef8d80b7e74b3da287189608d8f762526f98684558bbf053dc8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"You are not the owner of the sel\")\n        mstore(add(headStart, 96), \"ected artowork\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a96294bcbd0c6f0c2cec96a517816be9c6ee03d286d5f55aead7265fc58faf46__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"A collision during hashing occur\")\n        mstore(add(headStart, 96), \"red\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_bool__to_t_uint256_t_address_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_address__to_t_bytes32_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 52)\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "495:7154:0:-:0;;;2059:1;2038:22;;2269:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2234:53:0;;;-1:-1:-1;;;;;;2234:53:0;-1:-1:-1;;;;;2234:53:0;;;;;;;;;;2317:24;;2335:4;;2317:24;;;:::i;:::-;-1:-1:-1;;;;;178:32:5;;;160:51;;148:2;133:18;2317:24:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2296:45:0;;;-1:-1:-1;;;;;;2296:45:0;-1:-1:-1;;;;;2296:45:0;;;;;;;;;2370:23;;2381:4;;2296:45;2370:23;;;:::i;:::-;-1:-1:-1;;;;;477:15:5;;;459:34;;529:15;;524:2;509:18;;502:43;409:2;394:18;2370:23:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2347:46:0;;;-1:-1:-1;;;;;;2347:46:0;-1:-1:-1;;;;;2347:46:0;;;;;;;;;;2551:326;;;;;;;;;-1:-1:-1;2789:7:0;:20;;-1:-1:-1;;;;;;2789:20:0;2799:10;2789:20;;;2819:5;;2860:6;;2819:51;;-1:-1:-1;;;2819:51:0;;-1:-1:-1;;;;;2860:6:0;;;2819:51;;;160::5;2819:5:0;;;:17;;133:18:5;;2819:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:7154;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;222:329:5:-;495:7154:0;;;;;;",
  "deployedSourceMap": "495:7154:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1822:22;;;;;-1:-1:-1;;;;;1822:22:0;;;;;;-1:-1:-1;;;;;178:32:5;;;160:51;;148:2;133:18;1822:22:0;;;;;;;;2347:46;;;;;-1:-1:-1;;;;;2347:46:0;;;7519:128;;;;;;:::i;:::-;7579:7;7604:27;;;:18;:27;;;;;:36;;;-1:-1:-1;;;;;7604:36:0;;7519:128;5797:1011;;;;;;:::i;:::-;;:::i;:::-;;2234:53;;;;;-1:-1:-1;;;;;2234:53:0;;;1911:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1911:57:0;;;-1:-1:-1;;;1911:57:0;;;;;;;;;;1474:25:5;;;-1:-1:-1;;;;;1535:32:5;;;1530:2;1515:18;;1508:60;1611:14;1604:22;1584:18;;;1577:50;1462:2;1447:18;1911:57:0;1278:355:5;2296:45:0;;;;;-1:-1:-1;;;;;2296:45:0;;;7271:242;;;;;;:::i;:::-;;:::i;1974:56::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1974:56:0;;;;;;;;;;;;;;;;;;;;:::i;3770:113::-;;;;;;:::i;:::-;;:::i;4152:876::-;;;;;;:::i;:::-;;:::i;5311:480::-;;;;;;:::i;:::-;;:::i;7069:196::-;;;;;;:::i;:::-;;:::i;6814:249::-;;;;;;:::i;:::-;;:::i;1851:54::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1851:54:0;;;;;;;;;;;;;;;;;;;4101:25:5;;;-1:-1:-1;;;;;4200:15:5;;;4195:2;4180:18;;4173:43;4252:15;;;4232:18;;;4225:43;;;;4304:15;;4299:2;4284:18;;4277:43;4351:3;4336:19;;4329:35;;;;4153:3;4380:19;;4373:35;4088:3;4073:19;1851:54:0;3814:600:5;5797:1011:0;5918:12;;:32;;-1:-1:-1;;;5918:32:0;;5939:10;5918:32;;;160:51:5;5906:9:0;;-1:-1:-1;;;;;5918:12:0;;:20;;133:18:5;;5918:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5906:44;;6074:4;6082:1;6074:9;6067:17;;;;:::i;:::-;6102:29;;;;:18;:29;;;;;:40;;;-1:-1:-1;;;;;6102:40:0;6146:10;6102:54;6094:150;;;;-1:-1:-1;;;6094:150:0;;4942:2:5;6094:150:0;;;4924:21:5;4981:2;4961:18;;;4954:30;5020:34;5000:18;;;4993:62;5091:34;5071:18;;;5064:62;-1:-1:-1;;;5142:19:5;;;5135:49;5201:19;;6094:150:0;;;;;;;;;6278:45;;-1:-1:-1;;6295:10:0;5408:2:5;5404:15;5400:53;6278:45:0;;;5388:66:5;6307:15:0;5470:12:5;;;5463:28;6254:11:0;;5507:12:5;;6278:45:0;;;-1:-1:-1;;6278:45:0;;;;;;;;;6268:56;;6278:45;6268:56;;;;6334:29;;;;:18;:29;;;;;:36;;;;:44;;;6415:56;;;;;6424:10;6415:56;;6436:15;6415:56;;;;;;;6268;-1:-1:-1;6415:56:0;;;;6453:6;;6415:56;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;6388:24:0;;;:19;:24;;;;;;;:83;;;;-1:-1:-1;;;;;;6388:83:0;-1:-1:-1;;;;;6388:83:0;;;;;;;;;;-1:-1:-1;6388:83:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6388:83:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6523:12;:10;:12::i;:::-;6559:27;6549:6;:37;;;;;;;;:::i;:::-;;;:78;;;;-1:-1:-1;6600:27:0;6590:6;:37;;;;;;;;:::i;:::-;;;6549:78;6545:143;;;6638:6;;:39;;-1:-1:-1;;;6638:39:0;;6655:10;6638:39;;;5704:51:5;5771:18;;;5764:34;;;-1:-1:-1;;;;;6638:6:0;;;;:16;;5677:18:5;;6638:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6545:143;5896:912;;5797:1011;;;:::o;7271:242::-;7352:27;;;;:18;:27;;;;;:36;;;-1:-1:-1;;;;;7352:36:0;7392:10;7352:50;7344:109;;;;-1:-1:-1;;;7344:109:0;;6011:2:5;7344:109:0;;;5993:21:5;6050:2;6030:18;;;6023:30;6089:34;6069:18;;;6062:62;-1:-1:-1;;;6140:18:5;;;6133:44;6194:19;;7344:109:0;5809:410:5;7344:109:0;-1:-1:-1;7463:27:0;;:18;:27;;7271:242::o;3770:113::-;3842:7;;-1:-1:-1;;;;;3842:7:0;3828:10;:21;3821:29;;;;:::i;:::-;3860:5;:16;3770:113::o;4152:876::-;4227:12;;:32;;-1:-1:-1;;;4227:32:0;;4248:10;4227:32;;;160:51:5;4215:9:0;;-1:-1:-1;;;;;4227:12:0;;:20;;133:18:5;;4227:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4215:44;;4390:1;4383:4;:8;4376:16;;;;:::i;:::-;4494:11;4508:30;4527:10;4508:18;:30::i;:::-;4598:3;4556:23;;;:18;:23;;;;;;;;:30;;4494:44;;-1:-1:-1;;;;;;4556:30:0;:46;4548:94;;;;-1:-1:-1;;;4548:94:0;;6426:2:5;4548:94:0;;;6408:21:5;6465:2;6445:18;;;6438:30;6504:34;6484:18;;;6477:62;-1:-1:-1;;;6555:18:5;;;6548:33;6598:19;;4548:94:0;6224:399:5;4548:94:0;4652:12;:10;:12::i;:::-;4958:63;;;;;;;;;;;4978:10;4958:63;;;;;;;;;;;;;-1:-1:-1;4958:63:0;;;;;;;;;;;;;;;;;;4932:23;;;:18;:23;;;;;;;;:89;;;;;;;;;;;-1:-1:-1;;;;;;4932:89:0;;;-1:-1:-1;;;;;4932:89:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4152:876:0:o;5311:480::-;5508:12;;:32;;-1:-1:-1;;;5508:32:0;;5529:10;5508:32;;;160:51:5;5496:9:0;;-1:-1:-1;;;;;5508:12:0;;:20;;133:18:5;;5508:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5496:44;;5564:1;5557:4;:8;5550:16;;;;:::i;:::-;5576:11;5590:30;5609:10;5590:18;:30::i;:::-;5679:3;5637:23;;;:18;:23;;;;;;;;:30;;5576:44;;-1:-1:-1;;;;;;5637:30:0;:46;5630:54;;;;:::i;:::-;5694:12;:10;:12::i;:::-;5743:41;;;;;;;;;;;5765:10;5743:41;;;;;;;;;;;;;;;;-1:-1:-1;5716:24:0;;;:19;:24;;;;;:68;;;;;;;;;;;;;;;-1:-1:-1;;;5716:68:0;-1:-1:-1;;;;;;5716:68:0;;;-1:-1:-1;;;;;5716:68:0;;;;;;;;;;;;;;;-1:-1:-1;5311:480:0:o;7069:196::-;7143:27;;;;:18;:27;;;;;:36;;;-1:-1:-1;;;;;7143:36:0;7183:10;7143:50;7136:58;;;;:::i;:::-;7254:3;7204:27;:18;:27;;7069:196::o;6814:249::-;6947:27;;;;:18;:27;;;;;:36;;;-1:-1:-1;;;;;6947:36:0;6987:10;6947:50;6940:58;;;;:::i;:::-;7008:27;;-1:-1:-1;7008:18:0;:27;;6814:249::o;3565:199::-;3606:5;;3617;;;3606:36;;-1:-1:-1;;;3606:36:0;;;;;1474:25:5;3624:10:0;1515:18:5;;;1508:60;3606:5:0;1584:18:5;;;1577:50;-1:-1:-1;;;;;3606:5:0;;;;:10;;1447:18:5;;3606:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3565:199::o;3135:154::-;3205:7;3258:10;3270;3241:40;;;;;;;;7145:19:5;;;7202:2;7198:15;-1:-1:-1;;7194:53:5;7189:2;7180:12;;7173:75;7273:2;7264:12;;6988:294;3241:40:0;;;;;;;;;;;;;3231:51;;;;;;3224:58;;3135:154;;;:::o;444:180:5:-;503:6;556:2;544:9;535:7;531:23;527:32;524:52;;;572:1;569;562:12;524:52;-1:-1:-1;595:23:5;;444:180;-1:-1:-1;444:180:5:o;629:415::-;729:6;737;745;798:2;786:9;777:7;773:23;769:32;766:52;;;814:1;811;804:12;766:52;850:9;837:23;827:33;;910:2;899:9;895:18;882:32;943:1;936:5;933:12;923:40;;959:1;956;949:12;923:40;629:415;;982:5;;-1:-1:-1;;;1034:2:5;1019:18;;;;1006:32;;629:415::o;1859:173::-;1927:20;;-1:-1:-1;;;;;1976:31:5;;1966:42;;1956:70;;2022:1;2019;2012:12;1956:70;1859:173;;;:::o;2037:254::-;2105:6;2113;2166:2;2154:9;2145:7;2141:23;2137:32;2134:52;;;2182:1;2179;2172:12;2134:52;2218:9;2205:23;2195:33;;2247:38;2281:2;2270:9;2266:18;2247:38;:::i;:::-;2237:48;;2037:254;;;;;:::o;2296:127::-;2357:10;2352:3;2348:20;2345:1;2338:31;2388:4;2385:1;2378:15;2412:4;2409:1;2402:15;2428:591;-1:-1:-1;;;;;2698:32:5;;2680:51;;2762:2;2747:18;;2740:34;;;2667:3;2652:19;;2804:1;2793:13;;2783:144;;2849:10;2844:3;2840:20;2837:1;2830:31;2884:4;2881:1;2874:15;2912:4;2909:1;2902:15;2783:144;2958:2;2943:18;;2936:34;;;;3001:2;2986:18;2979:34;2428:591;;-1:-1:-1;;2428:591:5:o;3209:341::-;3274:6;3282;3335:2;3323:9;3314:7;3310:23;3306:32;3303:52;;;3351:1;3348;3341:12;3303:52;3387:9;3374:23;3364:33;;3447:2;3436:9;3432:18;3419:32;3494:5;3487:13;3480:21;3473:5;3470:32;3460:60;;3516:1;3513;3506:12;3460:60;3539:5;3529:15;;;3209:341;;;;;:::o;3555:254::-;3623:6;3631;3684:2;3672:9;3663:7;3659:23;3655:32;3652:52;;;3700:1;3697;3690:12;3652:52;3723:29;3742:9;3723:29;:::i;:::-;3713:39;3799:2;3784:18;;;;3771:32;;-1:-1:-1;;;3555:254:5:o;4419:184::-;4489:6;4542:2;4530:9;4521:7;4517:23;4513:32;4510:52;;;4558:1;4555;4548:12;4510:52;-1:-1:-1;4581:16:5;;4419:184;-1:-1:-1;4419:184:5:o;4608:127::-;4669:10;4664:3;4660:20;4657:1;4650:31;4700:4;4697:1;4690:15;4724:4;4721:1;4714:15",
  "source": "//for compability reasons, we work only with these versions\npragma solidity >=0.7.0 < 0.9.0;\n\nimport \"./Verification.sol\";\nimport \"./Patron.sol\";\nimport \"./DCoin.sol\";\n\n// import {symbol1 as alias, symbol2} from \"filename\";\n/*\nimport {isVerified, getRole as func, func} from \"./Verification.sol\";\nimport {Unauthorized, add as func, Point} from \"./DCoin.sol\";\nimport {Unauthorized, add as func, Point} from \"./Patron.sol\";\n*/\n\nerror Unauthorized(address caller);\n\n\n//we have objects to work with\ncontract DArt {\n\n    /* DUBBI:\n    Ripassa gli event\n    */\n\n    /*\n        TODO inserisci i pagamenti per i servizi\n        Fai event\n    */\n \n    event ProtectionActivityStarted(Artwork indexed artwork);\n\n    //we have a struct to store the data about artworks\n    struct Artwork {\n        bytes32 hashedName;\n        address minter; //the address of the museum that minted the artwork\n        address property;\n        address possession;\n        bytes32 exposedAt; // Da vedere come gestire lo storico delle esposizioni\n        bytes32 status; // Da vedere come gestire lo storico delle operazioni\n    }\n\n    // A struct to collect information about exibitions\n    struct Exibition {\n        bytes32 hashedName;\n        address organizer;\n        bool isOn; \n    }\n\n    struct Activity{\n        // bytes32 artworkId;\n        address author;\n        uint timestamp;\n        ProtectionActivities typology;\n        bytes32 extraInfo;\n    }\n    \n    // This enum indicates the type of operation applied to and update of an artwork\n    enum ProtectionActivities {\n        PREVENTION,\n        PROTECTIOIN,\n        MAINTAINANCE,\n        RESTAURATION,\n        DAMAGE,\n        UPDATE\n    }\n\n    //this is the address of the creator MAYBE PRIVATE, namely the owner\n    //of the smart contract that it can do some special actions\n    address public creator;\n\n    mapping (bytes32 => Artwork) public registeredArtworks;\n    mapping (bytes32 => Exibition) public registerdExibitions;\n    mapping (bytes32 => Activity) public registerdActivities;\n\n\n    uint private price = 1;\n\n    /*\n    address public constant dcoinSmartcontract;\n    address public constant verificatioSmartcontract; \n    address public constant patronSmartcontract;\n    */\n\n    Verification public verification = new Verification();   \n    DCoin public dcoin = new DCoin(address(this));\n    Patron public patron = new Patron(this, dcoin);   \n  \n\n\n    //the first time that we call che smart contract we need to save which is the\n    //creator, because it can do after some important actions\n    constructor(){\n        //so we save the address of the creator, one time and forever\n        /*\n        dcoin = dcoinSmartcontract;\n        verification = verificatioSmartcontract;\n        patron = patronSmartcontract;\n        */\n        creator = msg.sender;\n        dcoin.setContrats(address(Patron(address(patron))));\n    }\n\n    /**\n        @notice a pure faction to hash a string and the address of the caller, used to create univoque ids\n        @param hashedName the hashed string that have to be hashed with the msg.sender\n     */\n     // Dovrebbe essere pure ma da errore\n    function hashTextAndAddress(bytes32 hashedName) internal view returns(bytes32) {\n        return keccak256(abi.encodePacked(hashedName, msg.sender));\n    }\n\n    function checkWallet() internal {\n        assert(verification.isVerified(msg.sender));\n        /*assert(\n            verificationSmartcontract.call(aby.encodingWithSignature(\"isVerified(address)\",msg.sender)),\n            \"Sender's wallet is not verifed\");*/\n    }\n\n    function payService() internal {\n        dcoin.burn(price, msg.sender, false);   \n        //dcoinSmartcontract.call(aby.encodingWithSignature(\"burn(uint,address,bool)\",price,msg.sender,false));\n    }\n\n    function setPrice(uint newprice) external{\n        assert(msg.sender == creator);\n        price = newprice;\n    }\n\n    //called by a museum, to add an artwork in blockchain (MAYBE TO DO\n    /**\n        @notice mint an Artwork NFT. The id of the NFT is the hash of its name and the minter address.\n        @param hashedName name of the artwork hashed using keccak256\n     */    \n    function mintArtworkNFT(bytes32 hashedName) external {\n        uint role = verification.getRole(msg.sender);\n        //role = verificationSmartcontract.call(abi.encodingWithSignature(\"getRole(address)\",msg.sender));\n        assert(role < 4);\n        //assert(registeredWallets[msg.sender].verified, \"Sender's wallet is not verifed\");\n        bytes32 kek = hashTextAndAddress(hashedName);\n        require(registeredArtworks[kek].minter == address(0x0), \"A collision during hashing occurred\");\n        payService();\n        //we add the artwork to the mapping\n        /*\n        TODO: all this stuff have to be recoded and we have to decide if use one mapping from address to \n        a list of artworks or a mapping from any artwork to walletts, or both of them\n        */\n        registeredArtworks[kek] = Artwork(hashedName, msg.sender, msg.sender, address(0x0), 0, 0);\n    }\n\n    /**\n        @notice mint an Exibition NFT. The id of the NFT is the hash of its name and the minter address.\n        @param hashedName the Exibition's name hashed using keccak256\n        @param status indicates the status of the creare exibition, if it's on or not\n     */\n    function mintExibitionNFT(bytes32 hashedName, bool status) external {\n        //role = verificationSmartcontract.call(abi.encodingWithSignature(\"getRole(address)\",msg.sender));\n        uint role = verification.getRole(msg.sender);\n        assert(role < 2);\n        bytes32 kek = hashTextAndAddress(hashedName);\n        assert(registeredArtworks[kek].minter == address(0x0));\n        payService();\n        registerdExibitions[kek] = Exibition(hashedName, msg.sender, status);\n    }\n\n    function createActivity(bytes32 artworkID, ProtectionActivities oftype, bytes32 extrainfo) external{\n        uint role = verification.getRole(msg.sender);\n        //role = verificationSmartcontract.call(abi.encodingWithSignature(\"getRole(address)\",msg.sender));\n        assert(role == 4);\n        require(registeredArtworks[artworkID].possession == msg.sender,  \"You do not have the necessary permissions to create an Activity about this artwork\");\n        bytes32 kek = keccak256(abi.encodePacked(msg.sender, block.timestamp));\n        registeredArtworks[artworkID].status =   kek;\n        registerdActivities[kek] = Activity(msg.sender, block.timestamp, oftype, extrainfo);  \n        //TODO: Save all the activities\n        payService();\n        if (oftype != ProtectionActivities.UPDATE && oftype != ProtectionActivities.DAMAGE){\n        patron.moveFunds(msg.sender, artworkID);\n        }\n        //patronSmartcontract.call(abi.encodingWithSignature(\"moveFunds(address,bytes32\",msg.sender, artworkID));\n    }\n\n    function allowAccessToArtwork(address target, bytes32 artwork) external {\n        //assert(museums[target].verified);\n        assert(registeredArtworks[artwork].property == msg.sender);\n        registeredArtworks[artwork].possession == target;\n    }\n\n    function revokeAccessToArtwork(bytes32 artwork) external {\n        assert(registeredArtworks[artwork].property == msg.sender);\n        registeredArtworks[artwork].possession == address(0x0);\n    }\n\n    function donateWorkOfArt(bytes32 artwork, address _to) external{\n        require(registeredArtworks[artwork].property == msg.sender, \"You are not the owner of the selected artowork\");\n        registeredArtworks[artwork].property == _to;\n    }\n\n    function getProperty(bytes32 artwork) external view returns(address){\n        return registeredArtworks[artwork].property;\n    }\n}\n",
  "sourcePath": "/Users/MichaelPlug/Documents/TF/contracts/DArt.sol",
  "ast": {
    "absolutePath": "project:/contracts/DArt.sol",
    "exportedSymbols": {
      "DArt": [
        477
      ],
      "DCoin": [
        728
      ],
      "Patron": [
        947
      ],
      "Unauthorized": [
        8
      ],
      "Verification": [
        1173
      ]
    },
    "id": 478,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:32:0"
      },
      {
        "absolutePath": "project:/contracts/Verification.sol",
        "file": "./Verification.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 478,
        "sourceUnit": 1174,
        "src": "94:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Patron.sol",
        "file": "./Patron.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 478,
        "sourceUnit": 948,
        "src": "123:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/DCoin.sol",
        "file": "./DCoin.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 478,
        "sourceUnit": 729,
        "src": "146:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8,
        "name": "Unauthorized",
        "nameLocation": "432:12:0",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 7,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 6,
              "mutability": "mutable",
              "name": "caller",
              "nameLocation": "453:6:0",
              "nodeType": "VariableDeclaration",
              "scope": 8,
              "src": "445:14:0",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 5,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "445:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "444:16:0"
        },
        "src": "426:35:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DArt",
        "contractDependencies": [
          728,
          947,
          1173
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 477,
        "linearizedBaseContracts": [
          477
        ],
        "name": "DArt",
        "nameLocation": "504:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 13,
            "name": "ProtectionActivityStarted",
            "nameLocation": "649:25:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "artwork",
                  "nameLocation": "691:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "675:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Artwork_$26_memory_ptr",
                    "typeString": "struct DArt.Artwork"
                  },
                  "typeName": {
                    "id": 10,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9,
                      "name": "Artwork",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26,
                      "src": "675:7:0"
                    },
                    "referencedDeclaration": 26,
                    "src": "675:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Artwork_$26_storage_ptr",
                      "typeString": "struct DArt.Artwork"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "674:25:0"
            },
            "src": "643:57:0"
          },
          {
            "canonicalName": "DArt.Artwork",
            "id": 26,
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "hashedName",
                "nameLocation": "795:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "787:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 14,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "787:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "minter",
                "nameLocation": "823:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "815:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 16,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "815:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "property",
                "nameLocation": "899:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "891:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "891:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "possession",
                "nameLocation": "925:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "917:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "917:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "exposedAt",
                "nameLocation": "953:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "945:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 22,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "945:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "1035:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "1027:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 24,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1027:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Artwork",
            "nameLocation": "769:7:0",
            "nodeType": "StructDefinition",
            "scope": 477,
            "src": "762:340:0",
            "visibility": "public"
          },
          {
            "canonicalName": "DArt.Exibition",
            "id": 33,
            "members": [
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "hashedName",
                "nameLocation": "1199:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "1191:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 27,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1191:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "organizer",
                "nameLocation": "1227:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "1219:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1219:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "isOn",
                "nameLocation": "1251:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "1246:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 31,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1246:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Exibition",
            "nameLocation": "1171:9:0",
            "nodeType": "StructDefinition",
            "scope": 477,
            "src": "1164:99:0",
            "visibility": "public"
          },
          {
            "canonicalName": "DArt.Activity",
            "id": 43,
            "members": [
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "author",
                "nameLocation": "1332:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "1324:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 34,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1324:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "1353:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "1348:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1348:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "typology",
                "nameLocation": "1393:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "1372:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                  "typeString": "enum DArt.ProtectionActivities"
                },
                "typeName": {
                  "id": 39,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 38,
                    "name": "ProtectionActivities",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 50,
                    "src": "1372:20:0"
                  },
                  "referencedDeclaration": 50,
                  "src": "1372:20:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                    "typeString": "enum DArt.ProtectionActivities"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "extraInfo",
                "nameLocation": "1419:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "1411:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 41,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1411:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Activity",
            "nameLocation": "1276:8:0",
            "nodeType": "StructDefinition",
            "scope": 477,
            "src": "1269:166:0",
            "visibility": "public"
          },
          {
            "canonicalName": "DArt.ProtectionActivities",
            "id": 50,
            "members": [
              {
                "id": 44,
                "name": "PREVENTION",
                "nameLocation": "1566:10:0",
                "nodeType": "EnumValue",
                "src": "1566:10:0"
              },
              {
                "id": 45,
                "name": "PROTECTIOIN",
                "nameLocation": "1586:11:0",
                "nodeType": "EnumValue",
                "src": "1586:11:0"
              },
              {
                "id": 46,
                "name": "MAINTAINANCE",
                "nameLocation": "1607:12:0",
                "nodeType": "EnumValue",
                "src": "1607:12:0"
              },
              {
                "id": 47,
                "name": "RESTAURATION",
                "nameLocation": "1629:12:0",
                "nodeType": "EnumValue",
                "src": "1629:12:0"
              },
              {
                "id": 48,
                "name": "DAMAGE",
                "nameLocation": "1651:6:0",
                "nodeType": "EnumValue",
                "src": "1651:6:0"
              },
              {
                "id": 49,
                "name": "UPDATE",
                "nameLocation": "1667:6:0",
                "nodeType": "EnumValue",
                "src": "1667:6:0"
              }
            ],
            "name": "ProtectionActivities",
            "nameLocation": "1535:20:0",
            "nodeType": "EnumDefinition",
            "src": "1530:149:0"
          },
          {
            "constant": false,
            "functionSelector": "02d05d3f",
            "id": 52,
            "mutability": "mutable",
            "name": "creator",
            "nameLocation": "1837:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "1822:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1822:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff9ebc51",
            "id": 57,
            "mutability": "mutable",
            "name": "registeredArtworks",
            "nameLocation": "1887:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "1851:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
              "typeString": "mapping(bytes32 => struct DArt.Artwork)"
            },
            "typeName": {
              "id": 56,
              "keyType": {
                "id": 53,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1860:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1851:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                "typeString": "mapping(bytes32 => struct DArt.Artwork)"
              },
              "valueType": {
                "id": 55,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54,
                  "name": "Artwork",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26,
                  "src": "1871:7:0"
                },
                "referencedDeclaration": 26,
                "src": "1871:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Artwork_$26_storage_ptr",
                  "typeString": "struct DArt.Artwork"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "62df36e9",
            "id": 62,
            "mutability": "mutable",
            "name": "registerdExibitions",
            "nameLocation": "1949:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "1911:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Exibition_$33_storage_$",
              "typeString": "mapping(bytes32 => struct DArt.Exibition)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 58,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1920:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1911:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Exibition_$33_storage_$",
                "typeString": "mapping(bytes32 => struct DArt.Exibition)"
              },
              "valueType": {
                "id": 60,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 59,
                  "name": "Exibition",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33,
                  "src": "1931:9:0"
                },
                "referencedDeclaration": 33,
                "src": "1931:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Exibition_$33_storage_ptr",
                  "typeString": "struct DArt.Exibition"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "73150fa3",
            "id": 67,
            "mutability": "mutable",
            "name": "registerdActivities",
            "nameLocation": "2011:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "1974:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Activity_$43_storage_$",
              "typeString": "mapping(bytes32 => struct DArt.Activity)"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 63,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1983:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1974:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Activity_$43_storage_$",
                "typeString": "mapping(bytes32 => struct DArt.Activity)"
              },
              "valueType": {
                "id": 65,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 64,
                  "name": "Activity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43,
                  "src": "1994:8:0"
                },
                "referencedDeclaration": 43,
                "src": "1994:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Activity_$43_storage_ptr",
                  "typeString": "struct DArt.Activity"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "2051:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "2038:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 68,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2038:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 69,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2059:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "4ffe2a8b",
            "id": 77,
            "mutability": "mutable",
            "name": "verification",
            "nameLocation": "2254:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "2234:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verification_$1173",
              "typeString": "contract Verification"
            },
            "typeName": {
              "id": 72,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 71,
                "name": "Verification",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1173,
                "src": "2234:12:0"
              },
              "referencedDeclaration": 1173,
              "src": "2234:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verification_$1173",
                "typeString": "contract Verification"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 75,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2269:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Verification_$1173_$",
                  "typeString": "function () returns (contract Verification)"
                },
                "typeName": {
                  "id": 74,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 73,
                    "name": "Verification",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1173,
                    "src": "2273:12:0"
                  },
                  "referencedDeclaration": 1173,
                  "src": "2273:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Verification_$1173",
                    "typeString": "contract Verification"
                  }
                }
              },
              "id": 76,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2269:18:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verification_$1173",
                "typeString": "contract Verification"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70ef131e",
            "id": 88,
            "mutability": "mutable",
            "name": "dcoin",
            "nameLocation": "2309:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "2296:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DCoin_$728",
              "typeString": "contract DCoin"
            },
            "typeName": {
              "id": 79,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78,
                "name": "DCoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 728,
                "src": "2296:5:0"
              },
              "referencedDeclaration": 728,
              "src": "2296:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DCoin_$728",
                "typeString": "contract DCoin"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "id": 85,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967268,
                      "src": "2335:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DArt_$477",
                        "typeString": "contract DArt"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_contract$_DArt_$477",
                        "typeString": "contract DArt"
                      }
                    ],
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "2327:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 83,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2327:7:0",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 86,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2327:13:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 82,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2317:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_DCoin_$728_$",
                  "typeString": "function (address) returns (contract DCoin)"
                },
                "typeName": {
                  "id": 81,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 80,
                    "name": "DCoin",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 728,
                    "src": "2321:5:0"
                  },
                  "referencedDeclaration": 728,
                  "src": "2321:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DCoin_$728",
                    "typeString": "contract DCoin"
                  }
                }
              },
              "id": 87,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2317:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DCoin_$728",
                "typeString": "contract DCoin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0ba32b27",
            "id": 97,
            "mutability": "mutable",
            "name": "patron",
            "nameLocation": "2361:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "2347:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Patron_$947",
              "typeString": "contract Patron"
            },
            "typeName": {
              "id": 90,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 89,
                "name": "Patron",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 947,
                "src": "2347:6:0"
              },
              "referencedDeclaration": 947,
              "src": "2347:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Patron_$947",
                "typeString": "contract Patron"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 94,
                  "name": "this",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4294967268,
                  "src": "2381:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DArt_$477",
                    "typeString": "contract DArt"
                  }
                },
                {
                  "id": 95,
                  "name": "dcoin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 88,
                  "src": "2387:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DCoin_$728",
                    "typeString": "contract DCoin"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_contract$_DArt_$477",
                    "typeString": "contract DArt"
                  },
                  {
                    "typeIdentifier": "t_contract$_DCoin_$728",
                    "typeString": "contract DCoin"
                  }
                ],
                "id": 93,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "2370:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_DArt_$477_$_t_contract$_DCoin_$728_$returns$_t_contract$_Patron_$947_$",
                  "typeString": "function (contract DArt,contract DCoin) returns (contract Patron)"
                },
                "typeName": {
                  "id": 92,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 91,
                    "name": "Patron",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 947,
                    "src": "2374:6:0"
                  },
                  "referencedDeclaration": 947,
                  "src": "2374:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Patron_$947",
                    "typeString": "contract Patron"
                  }
                }
              },
              "id": 96,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2370:23:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Patron_$947",
                "typeString": "contract Patron"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "2564:313:0",
              "statements": [
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2789:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 101,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2799:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2799:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2789:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2789:20:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 113,
                                    "name": "patron",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97,
                                    "src": "2860:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Patron_$947",
                                      "typeString": "contract Patron"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Patron_$947",
                                      "typeString": "contract Patron"
                                    }
                                  ],
                                  "id": 112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2852:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 111,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2852:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2852:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 110,
                              "name": "Patron",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "2845:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Patron_$947_$",
                                "typeString": "type(contract Patron)"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2845:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Patron_$947",
                              "typeString": "contract Patron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Patron_$947",
                              "typeString": "contract Patron"
                            }
                          ],
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2837:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 108,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2837:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2837:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 105,
                        "name": "dcoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "2819:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DCoin_$728",
                          "typeString": "contract DCoin"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setContrats",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 529,
                      "src": "2819:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:51:0"
                }
              ]
            },
            "id": 120,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2562:2:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2564:0:0"
            },
            "scope": 477,
            "src": "2551:326:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "3214:75:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 131,
                            "name": "hashedName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "3258:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 132,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3270:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3270:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 129,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3241:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3241:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3241:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 128,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3231:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3231:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 127,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "3224:58:0"
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "2883:205:0",
              "text": "@notice a pure faction to hash a string and the address of the caller, used to create univoque ids\n@param hashedName the hashed string that have to be hashed with the msg.sender"
            },
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashTextAndAddress",
            "nameLocation": "3144:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "hashedName",
                  "nameLocation": "3171:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "3163:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3163:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3162:20:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "3205:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3204:9:0"
            },
            "scope": 477,
            "src": "3135:154:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "3327:232:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 144,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3368:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3368:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 142,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "3344:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verification_$1173",
                              "typeString": "contract Verification"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1052,
                          "src": "3344:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3344:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 141,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3337:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3337:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "3337:43:0"
                }
              ]
            },
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkWallet",
            "nameLocation": "3304:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3315:2:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3327:0:0"
            },
            "scope": 477,
            "src": "3295:264:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "3596:168:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 156,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "3617:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3624:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3624:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3636:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 153,
                        "name": "dcoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3606:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DCoin_$728",
                          "typeString": "contract DCoin"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 596,
                      "src": "3606:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,bool) external"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:36:0"
                }
              ]
            },
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payService",
            "nameLocation": "3574:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3584:2:0"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3596:0:0"
            },
            "scope": 477,
            "src": "3565:199:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "3811:72:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3828:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3828:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 171,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "3842:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3828:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 168,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3821:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:29:0"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 175,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "3860:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 176,
                      "name": "newprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3868:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3860:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:16:0"
                }
              ]
            },
            "functionSelector": "91b7f5ed",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPrice",
            "nameLocation": "3779:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "newprice",
                  "nameLocation": "3793:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "3788:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3788:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3787:15:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3811:0:0"
            },
            "scope": 477,
            "src": "3770:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "4205:823:0",
              "statements": [
                {
                  "assignments": [
                    187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "4220:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "4215:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 186,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4215:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 193,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4248:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4248:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 188,
                        "name": "verification",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "4227:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Verification_$1173",
                          "typeString": "contract Verification"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1080,
                      "src": "4227:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4227:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4215:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 195,
                          "name": "role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "4383:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4390:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "4383:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 194,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "4376:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4376:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "4376:16:0"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "kek",
                      "nameLocation": "4502:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "4494:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4494:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 205,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 203,
                        "name": "hashedName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "4527:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 202,
                      "name": "hashTextAndAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "4508:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4508:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4494:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 207,
                              "name": "registeredArtworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "4556:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                                "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                              }
                            },
                            "id": 209,
                            "indexExpression": {
                              "id": 208,
                              "name": "kek",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "4575:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4556:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artwork_$26_storage",
                              "typeString": "struct DArt.Artwork storage ref"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "4556:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4598:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4590:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4590:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4590:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4556:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4120636f6c6c6973696f6e20647572696e672068617368696e67206f63637572726564",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4604:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a96294bcbd0c6f0c2cec96a517816be9c6ee03d286d5f55aead7265fc58faf46",
                          "typeString": "literal_string \"A collision during hashing occurred\""
                        },
                        "value": "A collision during hashing occurred"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a96294bcbd0c6f0c2cec96a517816be9c6ee03d286d5f55aead7265fc58faf46",
                          "typeString": "literal_string \"A collision during hashing occurred\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4548:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4548:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "4548:94:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 219,
                      "name": "payService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "4652:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4652:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "4652:12:0"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 222,
                        "name": "registeredArtworks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4932:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                          "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                        }
                      },
                      "id": 224,
                      "indexExpression": {
                        "id": 223,
                        "name": "kek",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "4951:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4932:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artwork_$26_storage",
                        "typeString": "struct DArt.Artwork storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 226,
                          "name": "hashedName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4966:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 227,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4978:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4978:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 229,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4990:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4990:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5010:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5002:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 231,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5002:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5002:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5016:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5019:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 225,
                        "name": "Artwork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4958:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Artwork_$26_storage_ptr_$",
                          "typeString": "type(struct DArt.Artwork storage pointer)"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4958:63:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artwork_$26_memory_ptr",
                        "typeString": "struct DArt.Artwork memory"
                      }
                    },
                    "src": "4932:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Artwork_$26_storage",
                      "typeString": "struct DArt.Artwork storage ref"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:89:0"
                }
              ]
            },
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "3960:183:0",
              "text": "@notice mint an Artwork NFT. The id of the NFT is the hash of its name and the minter address.\n@param hashedName name of the artwork hashed using keccak256"
            },
            "functionSelector": "d0565e3e",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintArtworkNFT",
            "nameLocation": "4161:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "hashedName",
                  "nameLocation": "4184:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "4176:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:20:0"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4205:0:0"
            },
            "scope": 477,
            "src": "4152:876:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "5379:412:0",
              "statements": [
                {
                  "assignments": [
                    250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 250,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "5501:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "5496:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 249,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5496:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 253,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5529:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5529:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 251,
                        "name": "verification",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "5508:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Verification_$1173",
                          "typeString": "contract Verification"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1080,
                      "src": "5508:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5508:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5496:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 250,
                          "src": "5557:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5564:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5557:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 257,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "5550:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5550:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "5550:16:0"
                },
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "kek",
                      "nameLocation": "5584:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "5576:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5576:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 268,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 266,
                        "name": "hashedName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "5609:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 265,
                      "name": "hashTextAndAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "5590:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5590:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5576:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 270,
                              "name": "registeredArtworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "5637:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                                "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                              }
                            },
                            "id": 272,
                            "indexExpression": {
                              "id": 271,
                              "name": "kek",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "5656:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5637:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artwork_$26_storage",
                              "typeString": "struct DArt.Artwork storage ref"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "5637:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5679:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5671:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 274,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5671:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5671:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5637:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 269,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "5630:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5630:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "5630:54:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 281,
                      "name": "payService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "5694:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5694:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "5694:12:0"
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 284,
                        "name": "registerdExibitions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "5716:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Exibition_$33_storage_$",
                          "typeString": "mapping(bytes32 => struct DArt.Exibition storage ref)"
                        }
                      },
                      "id": 286,
                      "indexExpression": {
                        "id": 285,
                        "name": "kek",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "5736:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5716:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Exibition_$33_storage",
                        "typeString": "struct DArt.Exibition storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 288,
                          "name": "hashedName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "5753:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 289,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5765:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5765:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 291,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "5777:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 287,
                        "name": "Exibition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "5743:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Exibition_$33_storage_ptr_$",
                          "typeString": "type(struct DArt.Exibition storage pointer)"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5743:41:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Exibition_$33_memory_ptr",
                        "typeString": "struct DArt.Exibition memory"
                      }
                    },
                    "src": "5716:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Exibition_$33_storage",
                      "typeString": "struct DArt.Exibition storage ref"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5716:68:0"
                }
              ]
            },
            "documentation": {
              "id": 242,
              "nodeType": "StructuredDocumentation",
              "src": "5034:272:0",
              "text": "@notice mint an Exibition NFT. The id of the NFT is the hash of its name and the minter address.\n@param hashedName the Exibition's name hashed using keccak256\n@param status indicates the status of the creare exibition, if it's on or not"
            },
            "functionSelector": "f4edcb4a",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintExibitionNFT",
            "nameLocation": "5320:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "hashedName",
                  "nameLocation": "5345:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5337:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5337:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "5362:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5357:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5357:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5336:33:0"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5379:0:0"
            },
            "scope": 477,
            "src": "5311:480:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "5896:912:0",
              "statements": [
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "5911:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "5906:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5906:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 313,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5939:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5939:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 308,
                        "name": "verification",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "5918:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Verification_$1173",
                          "typeString": "contract Verification"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1080,
                      "src": "5918:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5918:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5906:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 315,
                          "name": "role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "6074:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6082:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6074:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 314,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "6067:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6067:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "6067:17:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 321,
                              "name": "registeredArtworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "6102:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                                "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                              }
                            },
                            "id": 323,
                            "indexExpression": {
                              "id": 322,
                              "name": "artworkID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "6121:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6102:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artwork_$26_storage",
                              "typeString": "struct DArt.Artwork storage ref"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "possession",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "6102:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 325,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6146:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6146:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6102:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520746865206e6563657373617279207065726d697373696f6e7320746f2063726561746520616e2041637469766974792061626f7574207468697320617274776f726b",
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6159:84:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a02b75414fea1b94034c410064023c4fa6555e502b763f01a982862550833165",
                          "typeString": "literal_string \"You do not have the necessary permissions to create an Activity about this artwork\""
                        },
                        "value": "You do not have the necessary permissions to create an Activity about this artwork"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a02b75414fea1b94034c410064023c4fa6555e502b763f01a982862550833165",
                          "typeString": "literal_string \"You do not have the necessary permissions to create an Activity about this artwork\""
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6094:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6094:150:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "6094:150:0"
                },
                {
                  "assignments": [
                    332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 332,
                      "mutability": "mutable",
                      "name": "kek",
                      "nameLocation": "6262:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "6254:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 331,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6254:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 336,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6295:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6295:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 338,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "6307:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6307:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 334,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6278:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6278:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6278:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 333,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "6268:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6268:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6254:70:0"
                },
                {
                  "expression": {
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 343,
                          "name": "registeredArtworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6334:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                            "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                          }
                        },
                        "id": 345,
                        "indexExpression": {
                          "id": 344,
                          "name": "artworkID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "6353:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6334:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artwork_$26_storage",
                          "typeString": "struct DArt.Artwork storage ref"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "6334:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 347,
                      "name": "kek",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "6375:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6334:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "6334:44:0"
                },
                {
                  "expression": {
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 350,
                        "name": "registerdActivities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "6388:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Activity_$43_storage_$",
                          "typeString": "mapping(bytes32 => struct DArt.Activity storage ref)"
                        }
                      },
                      "id": 352,
                      "indexExpression": {
                        "id": 351,
                        "name": "kek",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "6408:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6388:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Activity_$43_storage",
                        "typeString": "struct DArt.Activity storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 354,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6424:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6424:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 356,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "6436:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6436:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 358,
                          "name": "oftype",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "6453:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                            "typeString": "enum DArt.ProtectionActivities"
                          }
                        },
                        {
                          "id": 359,
                          "name": "extrainfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "6461:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                            "typeString": "enum DArt.ProtectionActivities"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 353,
                        "name": "Activity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "6415:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Activity_$43_storage_ptr_$",
                          "typeString": "type(struct DArt.Activity storage pointer)"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6415:56:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Activity_$43_memory_ptr",
                        "typeString": "struct DArt.Activity memory"
                      }
                    },
                    "src": "6388:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Activity_$43_storage",
                      "typeString": "struct DArt.Activity storage ref"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "6388:83:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 363,
                      "name": "payService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "6523:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6523:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "6523:12:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                        "typeString": "enum DArt.ProtectionActivities"
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 366,
                        "name": "oftype",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "6549:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                          "typeString": "enum DArt.ProtectionActivities"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 367,
                          "name": "ProtectionActivities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "6559:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ProtectionActivities_$50_$",
                            "typeString": "type(enum DArt.ProtectionActivities)"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "UPDATE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49,
                        "src": "6559:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                          "typeString": "enum DArt.ProtectionActivities"
                        }
                      },
                      "src": "6549:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                        "typeString": "enum DArt.ProtectionActivities"
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 370,
                        "name": "oftype",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "6590:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                          "typeString": "enum DArt.ProtectionActivities"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 371,
                          "name": "ProtectionActivities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "6600:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ProtectionActivities_$50_$",
                            "typeString": "type(enum DArt.ProtectionActivities)"
                          }
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "DAMAGE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48,
                        "src": "6600:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                          "typeString": "enum DArt.ProtectionActivities"
                        }
                      },
                      "src": "6590:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6549:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 384,
                  "nodeType": "IfStatement",
                  "src": "6545:143:0",
                  "trueBody": {
                    "id": 383,
                    "nodeType": "Block",
                    "src": "6628:60:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 378,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6655:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6655:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 380,
                              "name": "artworkID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "6667:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 375,
                              "name": "patron",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "6638:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Patron_$947",
                                "typeString": "contract Patron"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "moveFunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 946,
                            "src": "6638:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,bytes32) external"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6638:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 382,
                        "nodeType": "ExpressionStatement",
                        "src": "6638:39:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4c2d127d",
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createActivity",
            "nameLocation": "5806:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "artworkID",
                  "nameLocation": "5829:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "5821:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5821:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "oftype",
                  "nameLocation": "5861:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "5840:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                    "typeString": "enum DArt.ProtectionActivities"
                  },
                  "typeName": {
                    "id": 300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 299,
                      "name": "ProtectionActivities",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50,
                      "src": "5840:20:0"
                    },
                    "referencedDeclaration": 50,
                    "src": "5840:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProtectionActivities_$50",
                      "typeString": "enum DArt.ProtectionActivities"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "extrainfo",
                  "nameLocation": "5877:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "5869:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5869:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5820:67:0"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5896:0:0"
            },
            "scope": 477,
            "src": "5797:1011:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "6886:177:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 394,
                              "name": "registeredArtworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "6947:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                                "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                              }
                            },
                            "id": 396,
                            "indexExpression": {
                              "id": 395,
                              "name": "artwork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "6966:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6947:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artwork_$26_storage",
                              "typeString": "struct DArt.Artwork storage ref"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "property",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "6947:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 398,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6987:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6987:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6947:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 393,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "6940:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6940:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "6940:58:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 403,
                          "name": "registeredArtworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7008:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                            "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                          }
                        },
                        "id": 405,
                        "indexExpression": {
                          "id": 404,
                          "name": "artwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "7027:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7008:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artwork_$26_storage",
                          "typeString": "struct DArt.Artwork storage ref"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "possession",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "7008:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 407,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "7050:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7008:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "7008:48:0"
                }
              ]
            },
            "functionSelector": "fc13ae29",
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowAccessToArtwork",
            "nameLocation": "6823:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "6852:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "6844:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6844:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "artwork",
                  "nameLocation": "6868:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "6860:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6860:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6843:33:0"
            },
            "returnParameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6886:0:0"
            },
            "scope": 477,
            "src": "6814:249:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "7126:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 417,
                              "name": "registeredArtworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "7143:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                                "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                              }
                            },
                            "id": 419,
                            "indexExpression": {
                              "id": 418,
                              "name": "artwork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "7162:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7143:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artwork_$26_storage",
                              "typeString": "struct DArt.Artwork storage ref"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "property",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "7143:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 421,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7183:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7183:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7143:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 416,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "7136:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7136:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "7136:58:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 426,
                          "name": "registeredArtworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7204:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                            "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                          }
                        },
                        "id": 428,
                        "indexExpression": {
                          "id": 427,
                          "name": "artwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "7223:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7204:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artwork_$26_storage",
                          "typeString": "struct DArt.Artwork storage ref"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "possession",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "7204:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7254:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7246:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7246:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7246:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7204:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "7204:54:0"
                }
              ]
            },
            "functionSelector": "f9b82118",
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeAccessToArtwork",
            "nameLocation": "7078:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "artwork",
                  "nameLocation": "7108:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "7100:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7099:17:0"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7126:0:0"
            },
            "scope": 477,
            "src": "7069:196:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "7334:179:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 445,
                              "name": "registeredArtworks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "7352:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                                "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                              }
                            },
                            "id": 447,
                            "indexExpression": {
                              "id": 446,
                              "name": "artwork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "7371:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7352:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artwork_$26_storage",
                              "typeString": "struct DArt.Artwork storage ref"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "property",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "7352:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 449,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7392:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7392:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7352:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572206f66207468652073656c6563746564206172746f776f726b",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7404:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5200ab35d64ef8d80b7e74b3da287189608d8f762526f98684558bbf053dc8a8",
                          "typeString": "literal_string \"You are not the owner of the selected artowork\""
                        },
                        "value": "You are not the owner of the selected artowork"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5200ab35d64ef8d80b7e74b3da287189608d8f762526f98684558bbf053dc8a8",
                          "typeString": "literal_string \"You are not the owner of the selected artowork\""
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7344:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7344:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "7344:109:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 455,
                          "name": "registeredArtworks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7463:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                            "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                          }
                        },
                        "id": 457,
                        "indexExpression": {
                          "id": 456,
                          "name": "artwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "7482:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7463:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Artwork_$26_storage",
                          "typeString": "struct DArt.Artwork storage ref"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "property",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "7463:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 459,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "7503:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7463:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "7463:43:0"
                }
              ]
            },
            "functionSelector": "7278b2f2",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donateWorkOfArt",
            "nameLocation": "7280:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "artwork",
                  "nameLocation": "7304:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "7296:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7296:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7321:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "7313:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7313:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7295:30:0"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7334:0:0"
            },
            "scope": 477,
            "src": "7271:242:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "7587:60:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 470,
                        "name": "registeredArtworks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "7604:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Artwork_$26_storage_$",
                          "typeString": "mapping(bytes32 => struct DArt.Artwork storage ref)"
                        }
                      },
                      "id": 472,
                      "indexExpression": {
                        "id": 471,
                        "name": "artwork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "7623:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7604:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Artwork_$26_storage",
                        "typeString": "struct DArt.Artwork storage ref"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "property",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19,
                    "src": "7604:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 469,
                  "id": 474,
                  "nodeType": "Return",
                  "src": "7597:43:0"
                }
              ]
            },
            "functionSelector": "463f7a89",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProperty",
            "nameLocation": "7528:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "artwork",
                  "nameLocation": "7548:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "7540:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7540:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7539:17:0"
            },
            "returnParameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "7579:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7579:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7578:9:0"
            },
            "scope": 477,
            "src": "7519:128:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 478,
        "src": "495:7154:0",
        "usedErrors": []
      }
    ],
    "src": "60:7590:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5Ce39a981b1BFA155Dbd729D4a29C714b6D3aD48",
      "transactionHash": "0x4578f700e9b24151d7bc8a509d267170a5cc309a285976ce965f38bd6f2fc46d"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-01-02T11:42:45.350Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "mintArtworkNFT(bytes32)": {
        "params": {
          "hashedName": "name of the artwork hashed using keccak256"
        }
      },
      "mintExibitionNFT(bytes32,bool)": {
        "params": {
          "hashedName": "the Exibition's name hashed using keccak256",
          "status": "indicates the status of the creare exibition, if it's on or not"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "mintArtworkNFT(bytes32)": {
        "notice": "mint an Artwork NFT. The id of the NFT is the hash of its name and the minter address."
      },
      "mintExibitionNFT(bytes32,bool)": {
        "notice": "mint an Exibition NFT. The id of the NFT is the hash of its name and the minter address."
      }
    },
    "version": 1
  }
}